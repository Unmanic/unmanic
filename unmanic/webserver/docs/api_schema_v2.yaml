components:
  schemas:
    BadEndpoint:
      properties:
        error:
          description: Return status code and reason
          example: '404: Endpoint not found'
          type: string
      required:
      - error
      type: object
    BadMethod:
      properties:
        error:
          description: Return status code and reason
          example: '405: Method ''GET'' not allowed'
          type: string
      required:
      - error
      type: object
    BadRequest:
      properties:
        error:
          description: Return status code and reason
          example: '400: Failed request schema validation'
          type: string
        messages:
          description: Attached request body validation errors
          example: &id001
            name:
            - The thing that went wrong.
          type: object
        traceback:
          description: Attached exception traceback (if developer mode is enabled)
          example: &id002
          - 'Traceback (most recent call last):

            '
          - '...'
          - 'json.decoder.JSONDecodeError: Expecting value: line 3 column 14 (char
            45)

            '
          items:
            type: string
          type: array
      required:
      - error
      - messages
      type: object
    BaseSuccess:
      properties:
        success:
          description: This is always "True" when a request succeeds
          example: true
          type: boolean
      required:
      - success
      type: object
    CompletedTasks:
      properties:
        recordsTotal:
          description: Total number of records in this table
          example: 329
          type: integer
        recordsFiltered:
          default: 10
          description: Total number of records after filters have been applied
          example: 10
          type: integer
        results:
          description: Results
          items:
            $ref: '#/components/schemas/CompletedTasksTableResults'
          minItems: 0
          type: array
        successCount:
          description: Total count of times with a success status in the results list
          example: 337
          type: integer
        failedCount:
          description: Total count of times with a failed status in the results list
          example: 2
          type: integer
      required:
      - failedCount
      - results
      - successCount
      type: object
    CompletedTasksLog:
      properties:
        command_log:
          description: Long string...
          example: Long string...
          type: string
        command_log_lines:
          description: The long string broken up into an array of lines
          example:
          - ''
          - '<b>RUNNER: </b>'
          - 'Video Encoder H264 - libx264 [Pass #1]'
          - ''
          - <b>COMMAND:</b>
          - ''
          - '...'
          items:
            type: string
          type: array
      required:
      - command_log
      - command_log_lines
      type: object
    CompletedTasksLogRequest:
      properties:
        task_id:
          description: The ID of the task
          example: 1
          type: integer
      required:
      - task_id
      type: object
    CompletedTasksTableResults:
      properties:
        id:
          description: Item ID
          example: 1
          type: integer
        task_label:
          description: Item label
          example: example.mp4
          type: string
        task_success:
          description: Item success status
          example: true
          type: boolean
        finish_time:
          description: Item finish time
          example: 1627392616.6400812
          type: integer
      required:
      - finish_time
      - id
      - task_label
      - task_success
      type: object
    DirectoryListingResults:
      properties:
        directories:
          description: A list of directories in the given path
          example:
          - label: /home
            value: home
          - label: /tmp
            value: tmp
          items:
            type: object
          minItems: 0
          type: array
        files:
          description: A list of files in the given path
          example:
          - label: /file1.txt
            value: file1.txt
          - label: /file2.txt
            value: file2.txt
          items:
            type: object
          minItems: 0
          type: array
      required:
      - directories
      - files
      type: object
    DocumentContentSuccess:
      properties:
        content:
          description: Document contents read line-by-line into a list
          example:
          - 'First line

            '
          - 'Second line

            '
          - '

            '
          items:
            type: string
          minItems: 1
          type: array
      required:
      - content
      type: object
    InternalError:
      properties:
        error:
          description: Return status code and reason
          example: '500: Caught exception message'
          type: string
        messages:
          description: Attached request body validation errors
          example: *id001
          type: object
        traceback:
          description: Attached exception traceback (if developer mode is enabled)
          example: *id002
          items:
            type: string
          type: array
      required:
      - error
      - messages
      type: object
    LibraryResults:
      properties:
        id:
          description: ''
          example: 1
          type: integer
        name:
          description: The name of the library
          example: Default
          type: string
        path:
          description: The library path
          example: /library
          type: string
      required:
      - id
      - name
      - path
      type: object
    PendingTasks:
      properties:
        recordsTotal:
          description: Total number of records in this table
          example: 329
          type: integer
        recordsFiltered:
          default: 10
          description: Total number of records after filters have been applied
          example: 10
          type: integer
        results:
          description: Results
          items:
            $ref: '#/components/schemas/PendingTasksTableResults'
          minItems: 0
          type: array
      required:
      - results
      type: object
    PendingTasksTableResults:
      properties:
        id:
          description: Item ID
          example: 1
          type: integer
        abspath:
          description: File absolute path
          example: example.mp4
          type: string
        priority:
          description: The current priority (higher is greater)
          example: 100
          type: integer
        type:
          description: The type of the pending task - local or remote
          example: local
          type: string
        status:
          description: The current status of the pending task
          example: pending
          type: string
        checksum:
          description: The uploaded file md5 checksum
          example: 5425ab3df5cdbad2e1099bb4cb963a4f
          type: string
        library_id:
          description: The ID of the library for which this task was created
          example: 1
          type: integer
        library_name:
          description: The name of the library for which this task was created
          example: Default
          type: string
      required:
      - abspath
      - id
      - priority
      - status
      - type
      type: object
    PluginFlowDataResults:
      properties:
        plugin_id:
          description: The plugin ID
          example: encoder_video_h264_nvenc
          type: string
        name:
          description: The plugin name
          example: Video Encoder H264 - h264_nvenc
          type: string
        author:
          description: The plugin author
          example: encoder_video_h264_nvenc
          type: string
        description:
          description: The plugin description
          example: Ensure all video streams are encoded with the H264 codec using
            the h264_nvenc encoder.
          type: string
        version:
          description: The plugin version
          example: Josh.5
          type: string
        icon:
          description: The plugin icon
          example: https://raw.githubusercontent.com/Josh5/unmanic-plugins/master/source/encoder_video_h264_nvenc/icon.png
          type: string
      required:
      - author
      - description
      - icon
      - name
      - plugin_id
      - version
      type: object
    PluginReposListResults:
      properties:
        repos:
          description: Results
          items:
            $ref: '#/components/schemas/PluginReposMetadataResults'
          minItems: 0
          type: array
      required:
      - repos
      type: object
    PluginReposMetadataResults:
      properties:
        id:
          description: The plugin repo ID
          example: repository.josh5
          type: string
        name:
          description: The plugin repo name
          example: Josh.5 Development Plugins for Unmanic
          type: string
        icon:
          description: The plugin repo icon
          example: https://raw.githubusercontent.com/Josh5/unmanic-plugins/master/icon.png
          type: string
        path:
          description: The plugin repo URL path
          example: https://raw.githubusercontent.com/Josh5/unmanic-plugins/repo/repo.json
          type: string
      required:
      - icon
      - id
      - name
      - path
      type: object
    PluginStatus:
      properties:
        installed:
          description: Is the plugin installed
          example: true
          type: boolean
        update_available:
          description: Does the plugin have an update available
          example: true
          type: boolean
      type: object
    PluginTypesResults:
      properties:
        results:
          description: List of Plugin Type IDs supported by this installation
          example:
          - library_management.file_test
          - postprocessor.file_move
          - postprocessor.task_result
          - worker.process_item
          items:
            type: string
          type: array
      required:
      - results
      type: object
    PluginsConfigInputItem:
      properties:
        key_id:
          description: The config input base64 encoded key (used for linking keys
            containing spaces, etc.)
          example: c8f122656ed2acabde9b57101a4c8ec7
          type: string
        key:
          description: The config input key or name
          example: downmix_dts_hd_ma
          type: string
        value:
          description: The current value of this config input
          example: false
        input_type:
          description: The config input type
          example: checkbox
          type: string
        label:
          description: The label used to define this config input
          example: Downmix DTS-HD Master Audio (max 5.1 channels)?
          type: string
        select_options:
          description: Additional options if the input_type is set to 'select'
          example:
          - label: First Option
            value: first
          - label: Second Option
            value: second
          items:
            type: object
          type: array
        slider_options:
          description: Additional options if the input_type is set to 'slider'
          example:
            max: 8
            min: 1
            suffix: M
          type: object
        display:
          description: Should the setting input be displayed (visible, hidden)
          example: visible
          type: string
      required:
      - display
      - input_type
      - key
      - key_id
      - label
      - select_options
      - slider_options
      - value
      type: object
    PluginsData:
      properties:
        recordsTotal:
          description: Total number of records in this table
          example: 329
          type: integer
        recordsFiltered:
          default: 10
          description: Total number of records after filters have been applied
          example: 10
          type: integer
        results:
          description: Results
          items:
            $ref: '#/components/schemas/PluginsTableResults'
          minItems: 0
          type: array
      required:
      - results
      type: object
    PluginsDataPanelTypesData:
      properties:
        results:
          description: Results
          items:
            $ref: '#/components/schemas/PluginFlowDataResults'
          minItems: 0
          type: array
      required:
      - results
      type: object
    PluginsInfoResults:
      properties:
        plugin_id:
          description: The plugin ID
          example: encoder_video_h264_nvenc
          type: string
        name:
          description: The plugin name
          example: Video Encoder H264 - h264_nvenc
          type: string
        author:
          description: The plugin author
          example: encoder_video_h264_nvenc
          type: string
        description:
          description: The plugin description
          example: Ensure all video streams are encoded with the H264 codec using
            the h264_nvenc encoder.
          type: string
        version:
          description: The plugin version
          example: Josh.5
          type: string
        icon:
          description: The plugin icon
          example: https://raw.githubusercontent.com/Josh5/unmanic-plugins/master/source/encoder_video_h264_nvenc/icon.png
          type: string
        tags:
          description: The plugin tags
          example: video,encoder,ffmpeg,worker,nvenc,nvdec,nvidia
          type: string
        status:
          allOf:
          - $ref: '#/components/schemas/PluginStatus'
          description: The plugin status
        changelog:
          description: The plugin changelog
          example: "[b][color=56adda]0.0.1[/color][/b]\u2022 initial version"
          type: string
        has_config:
          description: The plugin has the ability to be configured
          example: true
          type: boolean
        settings:
          description: The plugin settings
          items:
            $ref: '#/components/schemas/PluginsConfigInputItem'
          type: array
      required:
      - author
      - description
      - icon
      - name
      - plugin_id
      - status
      - tags
      - version
      type: object
    PluginsInstallableResults:
      properties:
        plugins:
          description: Results
          items:
            $ref: '#/components/schemas/PluginsMetadataInstallableResults'
          minItems: 0
          type: array
      required:
      - plugins
      type: object
    PluginsMetadataInstallableResults:
      properties:
        plugin_id:
          description: The plugin ID
          example: encoder_video_h264_nvenc
          type: string
        name:
          description: The plugin name
          example: Video Encoder H264 - h264_nvenc
          type: string
        author:
          description: The plugin author
          example: encoder_video_h264_nvenc
          type: string
        description:
          description: The plugin description
          example: Ensure all video streams are encoded with the H264 codec using
            the h264_nvenc encoder.
          type: string
        version:
          description: The plugin version
          example: Josh.5
          type: string
        icon:
          description: The plugin icon
          example: https://raw.githubusercontent.com/Josh5/unmanic-plugins/master/source/encoder_video_h264_nvenc/icon.png
          type: string
        tags:
          description: The plugin tags
          example: video,encoder,ffmpeg,worker,nvenc,nvdec,nvidia
          type: string
        status:
          allOf:
          - $ref: '#/components/schemas/PluginStatus'
          description: The plugin status
        changelog:
          description: The plugin changelog
          example: "[b][color=56adda]0.0.1[/color][/b]\u2022 initial version"
          type: string
        has_config:
          description: The plugin has the ability to be configured
          example: true
          type: boolean
        package_url:
          description: The plugin package download URL
          example: https://raw.githubusercontent.com/Unmanic/unmanic-plugins/repo/plugin_id/plugin_id-1.0.0.zip
          type: string
        changelog_url:
          description: The plugin package download URL
          example: https://raw.githubusercontent.com/Unmanic/unmanic-plugins/repo/plugin_id/changelog.md
          type: string
        repo_name:
          description: The name of the repository that this plugin is in
          example: Official Repo
          type: string
        repo_id:
          description: The ID of the repository that this plugin is in
          example: '158899500680826593283708490873332175078'
          type: string
      required:
      - author
      - description
      - icon
      - name
      - plugin_id
      - status
      - tags
      - version
      type: object
    PluginsTableResults:
      properties:
        plugin_id:
          description: The plugin ID
          example: encoder_video_h264_nvenc
          type: string
        name:
          description: The plugin name
          example: Video Encoder H264 - h264_nvenc
          type: string
        author:
          description: The plugin author
          example: encoder_video_h264_nvenc
          type: string
        description:
          description: The plugin description
          example: Ensure all video streams are encoded with the H264 codec using
            the h264_nvenc encoder.
          type: string
        version:
          description: The plugin version
          example: Josh.5
          type: string
        icon:
          description: The plugin icon
          example: https://raw.githubusercontent.com/Josh5/unmanic-plugins/master/source/encoder_video_h264_nvenc/icon.png
          type: string
        tags:
          description: The plugin tags
          example: video,encoder,ffmpeg,worker,nvenc,nvdec,nvidia
          type: string
        status:
          allOf:
          - $ref: '#/components/schemas/PluginStatus'
          description: The plugin status
        changelog:
          description: The plugin changelog
          example: "[b][color=56adda]0.0.1[/color][/b]\u2022 initial version"
          type: string
        has_config:
          description: The plugin has the ability to be configured
          example: true
          type: boolean
        id:
          description: Item table ID
          example: 1
          type: integer
      required:
      - author
      - description
      - icon
      - id
      - name
      - plugin_id
      - status
      - tags
      - version
      type: object
    RequestAddCompletedToPendingTasks:
      properties:
        id_list:
          description: List of table IDs
          example: &id003 []
          items:
            type: integer
          minItems: 1
          type: array
        library_id:
          default: 0
          example: 1
          type: integer
      required:
      - id_list
      type: object
    RequestDirectoryListingData:
      properties:
        current_path:
          default: /
          example: /
          type: string
        list_type:
          default: all
          example: directories
          type: string
      type: object
    RequestHistoryTableData:
      properties:
        start:
          default: 0
          description: Start row number to select from
          example: 0
          type: integer
        length:
          default: 10
          description: Number of rows to select
          example: 10
          type: integer
        search_value:
          default: ''
          description: String to filter search results by
          example: items with this text in the value
          type: string
        order_by:
          default: finish_time
          example: finish_time
          type: string
        order_direction:
          description: Order direction ('asc' or 'desc')
          enum:
          - asc
          - desc
          example: desc
          type: string
      type: object
    RequestLibraryById:
      properties:
        id:
          description: The ID of the library
          example: 1
          type: integer
      required:
      - id
      type: object
    RequestPendingTableData:
      properties:
        start:
          default: 0
          description: Start row number to select from
          example: 0
          type: integer
        length:
          default: 10
          description: Number of rows to select
          example: 10
          type: integer
        search_value:
          default: ''
          description: String to filter search results by
          example: items with this text in the value
          type: string
        order_by:
          default: priority
          example: priority
          type: string
        order_direction:
          description: Order direction ('asc' or 'desc')
          enum:
          - asc
          - desc
          example: desc
          type: string
      type: object
    RequestPendingTasksReorder:
      properties:
        id_list:
          description: List of table IDs
          example: *id003
          items:
            type: integer
          minItems: 1
          type: array
        position:
          description: Position to move given list of items to ('top' or 'bottom')
          enum:
          - top
          - bottom
          example: top
          type: string
      required:
      - id_list
      - position
      type: object
    RequestPluginsById:
      properties:
        plugin_id:
          example: encoder_video_hevc_vaapi
          type: string
        repo_id:
          description: The ID of the repository that this plugin is in
          example: '158899500680826593283708490873332175078'
          type: string
      required:
      - plugin_id
      type: object
    RequestPluginsFlowByPluginType:
      properties:
        plugin_type:
          example: library_management.file_test
          type: string
        library_id:
          default: 1
          example: 1
          type: integer
      required:
      - plugin_type
      type: object
    RequestPluginsInfo:
      properties:
        plugin_id:
          example: encoder_video_hevc_vaapi
          type: string
        repo_id:
          description: The ID of the repository that this plugin is in
          example: '158899500680826593283708490873332175078'
          type: string
        prefer_local:
          default: true
          example: true
          type: boolean
        library_id:
          default: 0
          example: 1
          type: integer
      required:
      - plugin_id
      type: object
    RequestPluginsSettingsReset:
      properties:
        plugin_id:
          example: encoder_video_hevc_vaapi
          type: string
        library_id:
          default: 0
          example: 1
          type: integer
      required:
      - plugin_id
      type: object
    RequestPluginsSettingsSave:
      properties:
        plugin_id:
          example: encoder_video_hevc_vaapi
          type: string
        settings:
          description: The plugin settings
          items:
            $ref: '#/components/schemas/PluginsConfigInputItem'
          type: array
        library_id:
          default: 0
          example: 1
          type: integer
      required:
      - plugin_id
      - settings
      type: object
    RequestPluginsTableData:
      properties:
        start:
          default: 0
          description: Start row number to select from
          example: 0
          type: integer
        length:
          default: 10
          description: Number of rows to select
          example: 10
          type: integer
        search_value:
          default: ''
          description: String to filter search results by
          example: items with this text in the value
          type: string
        order_by:
          default: name
          example: name
          type: string
        order_direction:
          description: Order direction ('asc' or 'desc')
          enum:
          - asc
          - desc
          example: desc
          type: string
      type: object
    RequestRemoteInstallationLinkConfig:
      properties:
        uuid:
          description: The uuid of the remote installation
          example: 7cd35429-76ab-4a29-8649-8c91236b5f8b
          type: string
      required:
      - uuid
      type: object
    RequestSavingPluginsFlowByPluginType:
      properties:
        plugin_type:
          example: library_management.file_test
          type: string
        library_id:
          default: 1
          example: 1
          type: integer
        plugin_flow:
          description: Saved flow
          items:
            $ref: '#/components/schemas/PluginFlowDataResults'
          minItems: 1
          type: array
      required:
      - plugin_flow
      - plugin_type
      type: object
    RequestSettingsRemoteInstallationAddressValidation:
      properties:
        address:
          description: The address of the remote installation
          example: 192.168.1.2:8888
          type: string
      required:
      - address
      type: object
    RequestTableUpdateByIdList:
      properties:
        id_list:
          description: List of table IDs
          example: *id003
          items:
            type: integer
          minItems: 1
          type: array
      required:
      - id_list
      type: object
    RequestUpdatePluginReposList:
      properties:
        repos_list:
          description: A list of repost to save
          example:
          - https://raw.githubusercontent.com/Josh5/unmanic-plugins/repo/repo.json
          items:
            type: string
          minItems: 0
          type: array
      required:
      - repos_list
      type: object
    RequestWorkerById:
      properties:
        worker_id:
          example: '1'
          type: string
      required:
      - worker_id
      type: object
    SessionStateSuccess:
      properties:
        level:
          description: User level
          example: 0
          type: integer
        picture_uri:
          description: User picture
          example: https://c8.patreon.com/2/200/561356054
          type: string
        name:
          description: User name
          example: ExampleUsername123
          type: string
        email:
          description: User email
          example: example@gmail.com
          type: string
        created:
          description: Session time created
          example: 1627793093.676484
          type: number
        uuid:
          description: Installation uuid
          example: b429fcc7-9ce1-bcb3-2b8a-b094747f226e
          type: string
      required:
      - level
      - uuid
      type: object
    SettingsLibrariesList:
      properties:
        libraries:
          description: Results
          items:
            $ref: '#/components/schemas/LibraryResults'
          minItems: 1
          type: array
      required:
      - libraries
      type: object
    SettingsLibraryConfigReadAndWrite:
      properties:
        library_config:
          description: The library configuration
          example:
            enable_inotify: false
            enable_scanner: false
            id: 1
            name: Default
            path: /library
          type: object
        plugins:
          description: The library's enabled plugins
          example:
            enabled_plugins:
            - description: Notify Plex on completion of a task.
              icon: https://raw.githubusercontent.com/Josh5/unmanic.plugin.notify_plex/master/icon.png
              library_id: 1
              name: Notify Plex
              plugin_id: notify_plex
          type: object
      required:
      - library_config
      type: object
    SettingsLibraryPluginConfigExport:
      properties:
        plugins:
          description: The library's enabled plugins
          example:
            enabled_plugins:
            - description: Ensure all audio streams are encoded with the AC3 codec
                using the native FFmpeg ac3 encoder.
              icon: https://raw.githubusercontent.com/Josh5/unmanic.plugin.encoder_audio_ac3/master/icon.png
              library_id: 1
              name: Audio Encoder AC3
              plugin_id: encoder_audio_ac3
            plugin_flow:
              library_management.file_test:
              - author: Josh.5
                description: Ensure all audio streams are encoded with the AC3 codec
                  using the native FFmpeg ac3 encoder.
                icon: https://raw.githubusercontent.com/Josh5/unmanic.plugin.encoder_audio_ac3/master/icon.png
                name: Audio Encoder AC3
                plugin_id: encoder_audio_ac3
                version: 0.0.2
              postprocessor.file_move: []
              postprocessor.task_result: []
              worker.process_item:
              - author: Josh.5
                description: Ensure all audio streams are encoded with the AC3 codec
                  using the native FFmpeg ac3 encoder.
                icon: https://raw.githubusercontent.com/Josh5/unmanic.plugin.encoder_audio_ac3/master/icon.png
                name: Audio Encoder AC3
                plugin_id: encoder_audio_ac3
                version: 0.0.2
          type: object
      required:
      - plugins
      type: object
    SettingsReadAndWrite:
      properties:
        settings:
          description: The current settings
          example:
            cache_path: /tmp/unmanic
            debugging: false
            enable_library_scanner: false
            follow_symlinks: true
            library_path: /library
            number_of_workers: 1
            run_full_scan_on_start: false
            schedule_full_scan_minutes: 1440
            ui_port: 8888
            worker_event_schedules:
            - repetition: weekday
              repetitionLabel: Every Weekday
              scheduleTask: resume
              scheduleTaskLabel: Resume all workers
              scheduleTime: '23:00'
              scheduleWorkerCount: 0
          type: object
      required:
      - settings
      type: object
    SettingsRemoteInstallationData:
      properties:
        installation:
          description: The data from the remote installation
          example: {}
          type: object
      required:
      - installation
      type: object
    SettingsRemoteInstallationLinkConfig:
      properties:
        link_config:
          description: The configuration for the remote installation link
          example:
            address: 10.0.0.2:8888
            available: true
            enable_distributed_worker_count: false
            enable_receiving_tasks: false
            enable_sending_tasks: false
            enable_task_preloading: true
            last_updated: 1636166593.013826
            name: API schema generated
            version: 0.1.3
          type: object
        distributed_worker_count_target:
          description: The target count of workers to be distributed across any configured
            linked installations
          example: 4
          type: integer
      required:
      - link_config
      type: object
    SettingsSystemConfig:
      properties:
        configuration:
          description: The current system configuration
          example: {}
          type: object
      required:
      - configuration
      type: object
    TaskDownloadLink:
      properties:
        link_id:
          description: The ID used to download the file /unmanic/downloads/{link_id}
          example: 2960645c-a4e2-4b05-8866-7bd469ee9ef8
          type: string
      required:
      - link_id
      type: object
    VersionReadSuccess:
      properties:
        version:
          description: Application version
          example: 1.0.0
          type: string
      required:
      - version
      type: object
    WorkerStatusResults:
      properties:
        id:
          description: ''
          example: W0
          type: string
        name:
          description: ''
          example: Worker-W0
          type: string
        idle:
          description: Flag - is worker idle
          example: true
          type: boolean
        paused:
          description: Flag - is worker paused
          example: false
          type: boolean
        start_time:
          description: The time when this worker started processing a task
          example: '1635746377.0021548'
          nullable: true
          type: string
        current_file:
          description: The basename of the file currently being processed
          example: file.mp4
          type: string
        current_task:
          description: The Task ID
          example: 1
          nullable: true
          type: integer
        worker_log_tail:
          description: The log lines produced by the worker
          example:
          - "\n\nRUNNER: \nRemux Video Files [Pass #1]\n\n"
          - '

            Executing plugin runner... Please wait'
          - '

            Runner did not request to execute a command'
          - '


            No Plugin requested to run commands for this file ''/tmp/unmanic/unmanic_remote_pending_library-1635746225.3336523/file.mp4'''
          items:
            type: string
          minItems: 0
          type: array
        runners_info:
          description: The status of the plugin runner currently processing the file
          example:
            video_remuxer:
              author: Josh.5
              description: Remux a video file to the configured container
              icon: https://raw.githubusercontent.com/Josh5/unmanic.plugin.video_remuxer/master/icon.png
              name: Remux Video Files
              plugin_id: video_remuxer
              status: complete
              success: true
              version: 0.0.5
          type: object
        subprocess:
          description: The status of the process currently being executed
          example:
            elapsed: None
            percent: None
            pid: 140408939493120
          type: object
      required:
      - current_file
      - current_task
      - id
      - idle
      - name
      - paused
      - runners_info
      - start_time
      - subprocess
      - worker_log_tail
      type: object
    WorkerStatusSuccess:
      properties:
        workers_status:
          description: Results
          items:
            $ref: '#/components/schemas/WorkerStatusResults'
          minItems: 0
          type: array
      required:
      - workers_status
      type: object
  securitySchemes:
    BasicAuth:
      scheme: basic
      type: http
info:
  description: Documentation for the Unmanic application API
  title: Unmanic API
  version: '2'
openapi: 3.0.0
paths:
  /docs/privacypolicy:
    get:
      description: Returns the privacy policy.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentContentSuccess'
          description: 'Sample response: Returns the privacy policy.'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request; Check `messages` for any validation errors
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadEndpoint'
          description: Bad request; Requested endpoint not found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethod'
          description: Bad request; Requested method is not allowed
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: Internal error; Check `error` for exception
  /docs/logs/zip:
    get:
      description: Returns the all log files as zip.
      responses:
        '200':
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: 'Sample response: Returns the all log files as zip.'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request; Check `messages` for any validation errors
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadEndpoint'
          description: Bad request; Requested endpoint not found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethod'
          description: Bad request; Requested method is not allowed
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: Internal error; Check `error` for exception
  /filebrowser/list:
    post:
      description: Returns a list of files and/or subdirectories in a given directory.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestDirectoryListingData'
        description: Requested a list of files and/or subdirectories in a given directory.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryListingResults'
          description: 'Sample response: Returns a list of files and/or subdirectories
            in a given directory.'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request; Check `messages` for any validation errors
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadEndpoint'
          description: Bad request; Requested endpoint not found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethod'
          description: Bad request; Requested method is not allowed
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: Internal error; Check `error` for exception
  /history/tasks:
    post:
      description: Returns a list of completed tasks.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestHistoryTableData'
        description: Returns a list of completed tasks.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompletedTasks'
          description: 'Sample response: Returns a list of completed tasks.'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request; Check `messages` for any validation errors
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadEndpoint'
          description: Bad request; Requested endpoint not found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethod'
          description: Bad request; Requested method is not allowed
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: Internal error; Check `error` for exception
    delete:
      description: Delete a list of completed tasks.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestTableUpdateByIdList'
        description: Requested list of items to delete.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccess'
          description: Successful request; Returns success status
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request; Check `messages` for any validation errors
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadEndpoint'
          description: Bad request; Requested endpoint not found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethod'
          description: Bad request; Requested method is not allowed
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: Internal error; Check `error` for exception
  /history/reprocess:
    post:
      description: Add a list of completed tasks back to the Pending Tasks queue.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestAddCompletedToPendingTasks'
        description: Requested list of items to reprocess.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccess'
          description: Successful request; Returns success status
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request; Check `messages` for any validation errors
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadEndpoint'
          description: Bad request; Requested endpoint not found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethod'
          description: Bad request; Requested method is not allowed
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: Internal error; Check `error` for exception
  /history/task/log:
    post:
      description: Request the details of a completed task.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompletedTasksLogRequest'
        description: Requested the details of a completed task.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompletedTasksLog'
          description: 'Success: The details of a requested completed task.'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request; Check `messages` for any validation errors
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadEndpoint'
          description: Bad request; Requested endpoint not found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethod'
          description: Bad request; Requested method is not allowed
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: Internal error; Check `error` for exception
  /pending/tasks:
    post:
      description: Returns a list of pending tasks.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPendingTableData'
        description: Returns a list of pending tasks.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PendingTasks'
          description: 'Sample response: Returns a list of pending tasks.'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request; Check `messages` for any validation errors
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadEndpoint'
          description: Bad request; Requested endpoint not found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethod'
          description: Bad request; Requested method is not allowed
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: Internal error; Check `error` for exception
    delete:
      description: Delete a list of pending tasks.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestTableUpdateByIdList'
        description: Requested list of items to delete.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccess'
          description: Successful request; Returns success status
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request; Check `messages` for any validation errors
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadEndpoint'
          description: Bad request; Requested endpoint not found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethod'
          description: Bad request; Requested method is not allowed
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: Internal error; Check `error` for exception
  /pending/reorder:
    post:
      description: Reorder a list of pending tasks.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPendingTasksReorder'
        description: Requested list of items to reorder.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccess'
          description: Successful request; Returns success status
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request; Check `messages` for any validation errors
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadEndpoint'
          description: Bad request; Requested endpoint not found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethod'
          description: Bad request; Requested method is not allowed
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: Internal error; Check `error` for exception
  /pending/status/get:
    post:
      description: Set the status of a list of pending tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestTableUpdateByIdList'
        description: Set the status of a list of pending tasks.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PendingTasksTableResults'
          description: 'Sample response: Returns a list of tasks with their status.'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request; Check `messages` for any validation errors
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadEndpoint'
          description: Bad request; Requested endpoint not found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethod'
          description: Bad request; Requested method is not allowed
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: Internal error; Check `error` for exception
  /pending/status/set/ready:
    post:
      description: Set the status of a list of created pending tasks as ready for
        processing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestTableUpdateByIdList'
        description: Set the status of a list of created pending tasks as ready for
          processing.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccess'
          description: Successful request; Returns success status
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request; Check `messages` for any validation errors
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadEndpoint'
          description: Bad request; Requested endpoint not found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethod'
          description: Bad request; Requested method is not allowed
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: Internal error; Check `error` for exception
  /pending/download/file/id/{task_id}:
    get:
      description: Request a link for downloading a task file
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDownloadLink'
          description: Successful request; Returns download link ID
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request; Check `messages` for any validation errors
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadEndpoint'
          description: Bad request; Requested endpoint not found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethod'
          description: Bad request; Requested method is not allowed
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: Internal error; Check `error` for exception
  /pending/download/data/id/{task_id}:
    get:
      description: Request a link for downloading a task data
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDownloadLink'
          description: Successful request; Returns download link ID
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request; Check `messages` for any validation errors
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadEndpoint'
          description: Bad request; Requested endpoint not found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethod'
          description: Bad request; Requested method is not allowed
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: Internal error; Check `error` for exception
  /plugins/installed:
    post:
      description: Returns a list of installed plugins.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPluginsTableData'
        description: Requested a list of installed plugins.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginsData'
          description: 'Sample response: Returns a list of installed plugins.'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request; Check `messages` for any validation errors
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadEndpoint'
          description: Bad request; Requested endpoint not found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethod'
          description: Bad request; Requested method is not allowed
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: Internal error; Check `error` for exception
  /plugins/enable:
    post:
      description: DEPRECATED! Enable a list of plugins.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestTableUpdateByIdList'
        description: Requested list of plugins to enable.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccess'
          description: Successful request; Returns success status
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request; Check `messages` for any validation errors
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadEndpoint'
          description: Bad request; Requested endpoint not found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethod'
          description: Bad request; Requested method is not allowed
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: Internal error; Check `error` for exception
  /plugins/disable:
    post:
      description: DEPRECATED! Disable a list of plugins.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestTableUpdateByIdList'
        description: Requested list of plugins to disable.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccess'
          description: Successful request; Returns success status
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request; Check `messages` for any validation errors
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadEndpoint'
          description: Bad request; Requested endpoint not found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethod'
          description: Bad request; Requested method is not allowed
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: Internal error; Check `error` for exception
  /plugins/update:
    post:
      description: Update a list of plugins given their DB table IDs.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestTableUpdateByIdList'
        description: Requested list of plugins to update.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccess'
          description: Successful request; Returns success status
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request; Check `messages` for any validation errors
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadEndpoint'
          description: Bad request; Requested endpoint not found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethod'
          description: Bad request; Requested method is not allowed
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: Internal error; Check `error` for exception
  /plugins/remove:
    delete:
      description: Remove a list of plugins given their DB table IDs.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestTableUpdateByIdList'
        description: Requested list of plugins to remove.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccess'
          description: Successful request; Returns success status
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request; Check `messages` for any validation errors
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadEndpoint'
          description: Bad request; Requested endpoint not found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethod'
          description: Bad request; Requested method is not allowed
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: Internal error; Check `error` for exception
  /plugins/info:
    post:
      description: Returns a the metadata and settings of a requested plugin.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPluginsInfo'
        description: Requested a single plugin to install.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginsInfoResults'
          description: 'Sample response: Returns a the metadata and settings of a
            requested plugin.'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request; Check `messages` for any validation errors
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadEndpoint'
          description: Bad request; Requested endpoint not found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethod'
          description: Bad request; Requested method is not allowed
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: Internal error; Check `error` for exception
  /plugins/settings/update:
    post:
      description: Saves the settings of a single plugin.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPluginsSettingsSave'
        description: Requested a plugins settings be updated.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccess'
          description: Successful request; Returns success status
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request; Check `messages` for any validation errors
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadEndpoint'
          description: Bad request; Requested endpoint not found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethod'
          description: Bad request; Requested method is not allowed
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: Internal error; Check `error` for exception
  /plugins/settings/reset:
    post:
      description: Reset the settings of a single plugin.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPluginsSettingsReset'
        description: Requested a plugins settings be reset.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccess'
          description: Successful request; Returns success status
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request; Check `messages` for any validation errors
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadEndpoint'
          description: Bad request; Requested endpoint not found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethod'
          description: Bad request; Requested method is not allowed
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: Internal error; Check `error` for exception
  /plugins/installable:
    get:
      description: Returns a list of installable plugins.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginsInstallableResults'
          description: 'Sample response: Returns a list of installable plugins.'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request; Check `messages` for any validation errors
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadEndpoint'
          description: Bad request; Requested endpoint not found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethod'
          description: Bad request; Requested method is not allowed
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: Internal error; Check `error` for exception
  /plugins/install:
    post:
      description: Installs a plugin by its Plugin ID.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPluginsById'
        description: Requested a plugin be installed by its Plugin ID.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccess'
          description: Successful request; Returns success status
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request; Check `messages` for any validation errors
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadEndpoint'
          description: Bad request; Requested endpoint not found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethod'
          description: Bad request; Requested method is not allowed
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: Internal error; Check `error` for exception
  /plugins/flow:
    post:
      description: Returns the plugin flow for a requested plugin type.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPluginsFlowByPluginType'
        description: Requests the plugin flow of a given plugin type.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginsInstallableResults'
          description: 'Sample response: Returns the plugin flow for a requested plugin
            type.'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request; Check `messages` for any validation errors
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadEndpoint'
          description: Bad request; Requested endpoint not found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethod'
          description: Bad request; Requested method is not allowed
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: Internal error; Check `error` for exception
  /plugins/flow/types:
    get:
      description: Returns a list of all plugin types that have flows.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginTypesResults'
          description: 'Sample response: Returns a list of all plugin types that have
            flows.'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request; Check `messages` for any validation errors
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadEndpoint'
          description: Bad request; Requested endpoint not found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethod'
          description: Bad request; Requested method is not allowed
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: Internal error; Check `error` for exception
  /plugins/flow/save:
    post:
      description: Saves the plugin flow for a requested plugin type.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestSavingPluginsFlowByPluginType'
        description: Requests saving the plugin flow for a given plugin type.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginsInstallableResults'
          description: 'Sample response: Save the plugin flow for a requested plugin
            type.'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request; Check `messages` for any validation errors
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadEndpoint'
          description: Bad request; Requested endpoint not found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethod'
          description: Bad request; Requested method is not allowed
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: Internal error; Check `error` for exception
  /plugins/repos/update:
    post:
      description: Updates the plugin repo list.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestUpdatePluginReposList'
        description: Requested an update to the plugin repo list.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccess'
          description: Successful request; Returns success status
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request; Check `messages` for any validation errors
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadEndpoint'
          description: Bad request; Requested endpoint not found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethod'
          description: Bad request; Requested method is not allowed
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: Internal error; Check `error` for exception
  /plugins/repos/list:
    get:
      description: Returns a list of plugin repos.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginReposListResults'
          description: 'Sample response: Returns a list of plugin repos.'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request; Check `messages` for any validation errors
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadEndpoint'
          description: Bad request; Requested endpoint not found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethod'
          description: Bad request; Requested method is not allowed
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: Internal error; Check `error` for exception
  /plugins/repos/reload:
    post:
      description: Reload plugin repositories remote data.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccess'
          description: Successful request; Returns success status
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request; Check `messages` for any validation errors
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadEndpoint'
          description: Bad request; Requested endpoint not found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethod'
          description: Bad request; Requested method is not allowed
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: Internal error; Check `error` for exception
  /plugins/panels/enabled:
    get:
      description: Returns a list of installed plugins.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginsDataPanelTypesData'
          description: 'Success: Returns a list of installed plugins.'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request; Check `messages` for any validation errors
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadEndpoint'
          description: Bad request; Requested endpoint not found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethod'
          description: Bad request; Requested method is not allowed
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: Internal error; Check `error` for exception
  /session/state:
    get:
      description: Returns the application session state.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionStateSuccess'
          description: 'Sample response: Returns the application session state.'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request; Check `messages` for any validation errors
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadEndpoint'
          description: Bad request; Requested endpoint not found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethod'
          description: Bad request; Requested method is not allowed
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: Internal error; Check `error` for exception
  /session/reload:
    post:
      description: Reload the current session.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccess'
          description: Successful request; Returns success status
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request; Check `messages` for any validation errors
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadEndpoint'
          description: Bad request; Requested endpoint not found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethod'
          description: Bad request; Requested method is not allowed
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: Internal error; Check `error` for exception
  /settings/read:
    get:
      description: Returns the application settings.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingsReadAndWrite'
          description: 'Sample response: Returns the application settings.'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request; Check `messages` for any validation errors
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadEndpoint'
          description: Bad request; Requested endpoint not found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethod'
          description: Bad request; Requested method is not allowed
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: Internal error; Check `error` for exception
  /settings/write:
    post:
      description: Save a given dictionary of settings.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SettingsReadAndWrite'
        description: Requested a dictionary of settings to save.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccess'
          description: Successful request; Returns success status
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request; Check `messages` for any validation errors
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadEndpoint'
          description: Bad request; Requested endpoint not found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethod'
          description: Bad request; Requested method is not allowed
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: Internal error; Check `error` for exception
  /settings/configuration:
    get:
      description: Returns the system configuration.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingsSystemConfig'
          description: 'Sample response: Returns the system configuration.'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request; Check `messages` for any validation errors
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadEndpoint'
          description: Bad request; Requested endpoint not found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethod'
          description: Bad request; Requested method is not allowed
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: Internal error; Check `error` for exception
  /settings/link/validate:
    post:
      description: Validate a remote installation address
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestSettingsRemoteInstallationAddressValidation'
        description: The details of the remote installation to validate
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingsRemoteInstallationData'
          description: 'Sample response: Returns the remote installation data.'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request; Check `messages` for any validation errors
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadEndpoint'
          description: Bad request; Requested endpoint not found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethod'
          description: Bad request; Requested method is not allowed
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: Internal error; Check `error` for exception
  /settings/link/read:
    post:
      description: Read the configuration of a remote installation link
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestRemoteInstallationLinkConfig'
        description: The UUID of the remote installation
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingsRemoteInstallationLinkConfig'
          description: 'Sample response: Returns the remote installation link configuration.'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request; Check `messages` for any validation errors
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadEndpoint'
          description: Bad request; Requested endpoint not found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethod'
          description: Bad request; Requested method is not allowed
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: Internal error; Check `error` for exception
  /settings/link/write:
    post:
      description: Write the configuration of a remote installation link
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SettingsRemoteInstallationLinkConfig'
        description: The UUID of the remote installation and its configuration
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccess'
          description: Successful request; Returns success status
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request; Check `messages` for any validation errors
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadEndpoint'
          description: Bad request; Requested endpoint not found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethod'
          description: Bad request; Requested method is not allowed
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: Internal error; Check `error` for exception
  /settings/libraries:
    get:
      description: Returns a list of all libraries.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingsLibrariesList'
          description: 'Sample response: Returns a list of all libraries.'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request; Check `messages` for any validation errors
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadEndpoint'
          description: Bad request; Requested endpoint not found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethod'
          description: Bad request; Requested method is not allowed
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: Internal error; Check `error` for exception
  /settings/library/read:
    post:
      description: Read the configuration of one library
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestLibraryById'
        description: The ID of the library
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingsLibraryConfigReadAndWrite'
          description: 'Sample response: Returns the remote installation link configuration.'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request; Check `messages` for any validation errors
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadEndpoint'
          description: Bad request; Requested endpoint not found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethod'
          description: Bad request; Requested method is not allowed
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: Internal error; Check `error` for exception
  /settings/library/write:
    post:
      description: Write the configuration of one library
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SettingsLibraryConfigReadAndWrite'
        description: Requested a dictionary of settings to save.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccess'
          description: Successful request; Returns success status
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request; Check `messages` for any validation errors
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadEndpoint'
          description: Bad request; Requested endpoint not found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethod'
          description: Bad request; Requested method is not allowed
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: Internal error; Check `error` for exception
  /settings/library/remove:
    delete:
      description: Remove a library
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestLibraryById'
        description: Requested a library to remove.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccess'
          description: Successful request; Returns success status
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request; Check `messages` for any validation errors
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadEndpoint'
          description: Bad request; Requested endpoint not found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethod'
          description: Bad request; Requested method is not allowed
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: Internal error; Check `error` for exception
  /settings/library/export:
    post:
      description: Export the plugin configuration of one library
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestLibraryById'
        description: The ID of the library
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingsLibraryPluginConfigExport'
          description: 'Sample response: Returns the remote installation link configuration.'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request; Check `messages` for any validation errors
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadEndpoint'
          description: Bad request; Requested endpoint not found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethod'
          description: Bad request; Requested method is not allowed
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: Internal error; Check `error` for exception
  /upload/pending/file:
    post:
      description: Returns a list of pending tasks.
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                fileName:
                  format: binary
                  type: string
              type: object
        description: Returns a list of pending tasks.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PendingTasksTableResults'
          description: Successful request; Returns data for the generated task
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request; Check `messages` for any validation errors
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadEndpoint'
          description: Bad request; Requested endpoint not found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethod'
          description: Bad request; Requested method is not allowed
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: Internal error; Check `error` for exception
  /version/read:
    get:
      description: Returns the application version.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionReadSuccess'
          description: 'Sample response: Returns the application version.'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request; Check `messages` for any validation errors
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadEndpoint'
          description: Bad request; Requested endpoint not found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethod'
          description: Bad request; Requested method is not allowed
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: Internal error; Check `error` for exception
  /workers/worker/pause:
    post:
      description: Pauses a worker by its ID.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestWorkerById'
        description: Requested a worker be paused by its ID.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccess'
          description: Successful request; Returns success status
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request; Check `messages` for any validation errors
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadEndpoint'
          description: Bad request; Requested endpoint not found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethod'
          description: Bad request; Requested method is not allowed
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: Internal error; Check `error` for exception
  /workers/worker/pause/all:
    post:
      description: Pause all workers.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccess'
          description: Successful request; Returns success status
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request; Check `messages` for any validation errors
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadEndpoint'
          description: Bad request; Requested endpoint not found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethod'
          description: Bad request; Requested method is not allowed
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: Internal error; Check `error` for exception
  /workers/worker/resume:
    post:
      description: Resumes a worker by its ID.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestWorkerById'
        description: Requested a worker be resumed by its ID.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccess'
          description: Successful request; Returns success status
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request; Check `messages` for any validation errors
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadEndpoint'
          description: Bad request; Requested endpoint not found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethod'
          description: Bad request; Requested method is not allowed
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: Internal error; Check `error` for exception
  /workers/worker/resume/all:
    post:
      description: Resumes all workers.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccess'
          description: Successful request; Returns success status
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request; Check `messages` for any validation errors
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadEndpoint'
          description: Bad request; Requested endpoint not found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethod'
          description: Bad request; Requested method is not allowed
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: Internal error; Check `error` for exception
  /workers/worker/terminate:
    delete:
      description: Terminates a worker by its ID.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestWorkerById'
        description: Requested a worker be terminated by its ID.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccess'
          description: Successful request; Returns success status
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request; Check `messages` for any validation errors
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadEndpoint'
          description: Bad request; Requested endpoint not found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethod'
          description: Bad request; Requested method is not allowed
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: Internal error; Check `error` for exception
  /workers/status:
    get:
      description: Returns the status of all workers.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkerStatusSuccess'
          description: 'Sample response: Returns the status of all workers.'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request; Check `messages` for any validation errors
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadEndpoint'
          description: Bad request; Requested endpoint not found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethod'
          description: Bad request; Requested method is not allowed
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
          description: Internal error; Check `error` for exception
security:
- BasicAuth: []
servers:
- description: Local environment
  url: http://localhost:8888/unmanic/api/v2/
